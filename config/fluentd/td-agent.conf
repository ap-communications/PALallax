####
## Output descriptions:
##

# Treasure Data (http://www.treasure-data.com/) provides cloud based data
# analytics platform, which easily stores and processes data from td-agent.
# FREE plan is also provided.
# @see http://docs.fluentd.org/articles/http-to-td
#
# This section matches events whose tag is td.DATABASE.TABLE

## built-in TCP input
## @see http://docs.fluentd.org/articles/in_forward
<source>
  type forward
</source>

<source>
  type snmptrap       # required, chossing the input plugin.
  host 0.0.0.0        # optional, interface to listen on, default 0 for all.
  port 162            # optional, port to listen for traps, default is 1062
  out_executor lib/snmp_out_exec.rb # Threat traffic plugin
  # out_executor lib/snmp_out_exec_all.rb # All traffic plugin
  tag palo.snmp  # optional, tag to assign to events, default is alert.snmptrap
</source>

<source>
  type snmp
  tag snmp.server1
  nodes name, value
  out_executor lib/snmp_get_out_exec.rb
  host 192.168.0.1
  port 161
  community public
  version :SNMPv2c
  mib 1.3.6.1.2.1.25.3.3.1.2.1, 1.3.6.1.2.1.25.3.3.1.2.2, 1.3.6.1.2.1.99.1.1.1.4.1, 1.3.6.1.2.1.99.1.1.1.4.3
  method_type get
  polling_time 1
  polling_type async_run
</source>

<match snmp.server*>
  type elasticsearch
  host 127.0.0.1
  port 9200
  logstash_format true
  logstash_prefix palo_system_stats
  flush_interval 3s
  logstash_dateformat %Y%m%d
</match>

<source>
  type debug_agent
  bind 127.0.0.1
  port 24230
</source>

<match **palostatus**>
  type copy
  <store>
    type elasticsearch
    host 127.0.0.1
    port 9200
    logstash_format true
    logstash_prefix palo_system_stats
    flush_interval 3s
    logstash_dateformat %Y%m%d
  </store>
  <store>
    type stdout
  </store>
</match>

<match palo.**>
  type copy
  <store>
    buffer_chunk_limit 8m
    buffer_queue_limit 1280
    buffer_type file
    buffer_path elastic_buf
    flush_interval 1s
    type geoip
    geoip_lookup_key destination_address, source_address
    <record>
      destination_country_code ${country_code["destination_address"]}
      destination_city  ${city["destination_address"]}
      destination_lat   ${latitude["destination_address"]}
      destination_lon   ${longitude["destination_address"]}
      source_country_code ${country_code["source_address"]}
      source_city  ${city["source_address"]}
      source_lat   ${latitude["source_address"]}
      source_lon   ${longitude["source_address"]}
    </record>
    add_tag_prefix elastic.
  </store>
</match>

<match elastic.palo.**>
  type copy
  <store>
    type elasticsearch
    host 127.0.0.1
    port 9200
    logstash_format true
    flush_interval 3s
    logstash_prefix palo_traffic_log
    logstash_dateformat %Y%m%d
  </store>
  <store>
    type wsrpc
    tag elastic.palo.snmp
    out_exec lib/ws_out_exec.rb
    uri wss://threatdb.ap-com.co.jp:443
  </store>
  <store>
    type stdout
  </store>
</match>
